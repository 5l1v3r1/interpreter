[interpreter]

This is a basic interpreter written for a programming languages class.  I've avoided tagging this repository as the name in case other students of the class google around and find it :)

It's really basic, but functional enough to get stuff done.  Variables, functions, basic loops, equality, etc. are all here.  Here's the example I worked off when creating this:

Func sqrt(num)
	n = 0;
	IF ( EQ(num, n)) to endit;
	N = num/2 + 1;
	N1 = ( n + (num / n )) /2;
Again: IF ( GE(n1, n)) to endit;
	n = n1;
	N1 = (n + (num / n)) /2;
	IF ( TRUE ) to Again;
// this is how returning from a function works
Endit: sqrt = n;
Endfunc

Func main()
	Write("Enter a number: ");
	Read (X);
	S = sqrt(x);
	Write("The square root is: ");
	Write(S);
Endfunc

There's some included examples and makefile and stuff.
